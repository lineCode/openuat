/* Copyright Rene Mayrhofer
 * File created 2006-04-27
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */
package org.openuat.sensors;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.StringTokenizer;

import org.apache.log4j.Logger;

/** This class implements a reader for the data format generated by 
 * 
 * @author Rene Mayrhofer
 * @version 1.0
 */
public class MainboardAccelerometerReader_Linux extends AsciiLineReaderBase {
	/** Our log4j logger. */
	private static Logger logger = Logger.getLogger(MainboardAccelerometerReader_Linux.class);

	/** Path to the HDAPS (IBM/Lenovo Thinkpads) sensor pseudo-file. */ 
	private static final String hdapsSensorFile = "/sys/bus/platform/devices/hdaps/position";
	
	/** Path to the applesmc (Apple Macbook (Pro) and iBook/Powerbook) sensor pseudo-file. */ 
	private static final String applesmcSensorFile = "/sys/bus/platform/devices/applesmc/position";
	
	/** Initializes the XXXXXXXXXXXXXXX. It only saves the
	 * passed parameters and opens the 
	 * 
	 * @param samplerate The sample rate in Hz.
	 * @throws FileNotFoundException When filename does not exist or can not be opened.
	 */
	public MainboardAccelerometerReader_Linux(int samplerate) throws FileNotFoundException {
		super(3, (int) (1000/samplerate), true);
		
		if (! System.getProperty("os.name").startsWith("Linux")) {
			logger.error("Not running on Linux (os.name='" + System.getProperty("os.name") + "'), can not initialize!");
			throw new RuntimeException("Not running under Linux, can not initialize");
		}
		
		String filename;
		if (new File(applesmcSensorFile).canRead()) {
			filename = applesmcSensorFile;
		} else if (new File(hdapsSensorFile).canRead()) {
			filename = hdapsSensorFile;
		} else {
			logger.error("Detected neither hdaps nor applesmc sensor, maybe the kernel modules need to be loaded? Can not initialize!");
			throw new FileNotFoundException("Could not detect any supported sensor");
		}
		reopenStreamFrom = new File(filename);
		port = new FileInputStream(reopenStreamFrom);
		
		logger.info("Reading from " + filename + " with sample rate of " + samplerate + " Hz, sleeping for " + 
				((int) (1000/samplerate)) + " ms between reads");
	}

	/* 
	 * @param line The line to parse.
	 */
	protected void parseLine(String line) {
		double[] sample = new double[3];
		
		if (line.charAt(0) != '(') {
			logger.error("Can not decode line '" + line + "', expected it to start with '('");
			return;
		}
		
		StringTokenizer st = new StringTokenizer(line.substring(1, line.length()-1), ",", false);
		for (int i=0; i<3; i++)
			sample[i] = Integer.parseInt(st.nextToken());
		emitSample(sample);
	}
}
