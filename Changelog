Version 0.10, released 2007-05-

  This is a minor new feature release, adding support for new accelerometer
  sensors available on some recent laptop mainboards and Bluetooth RFCOMM
  communication. It is also the first release to include J2ME applets with
  automatic building from the standard build.xml. Stream-oriented connections
  are now represented by the new RemoteConnection interface so that classes 
  like HostProtocolHandler and the DHWithVerification protocol can 
  transparently use different connection types, e.g. TCP or Bluetooth RFCOMM.
  
  A new concept introduced with this release is the concept of roles: a device
  or side of the authentication can hold one or multiple roles. Initial
  implementations include the two sides of the Resurrecting Duckling protocol.
  
  New interfaces:
  
  New abstraction: roles:
  * roles.Duckling
  * roles.MotherDuck
  
  New sensor data classes:
  * sensors.MainboardAccelerometerReaderFactory with implementations for 
    Linux and MacOS/X
  
  New utility classes for communication:
  * util.BluetoothRFCOMMServer
  * util.BluetoothPeerManager
  * util.BluetoothSupport with support for the avetanaBT stack
  
  New utility classes for user interaction:
  * apps.util.TrayIconHelper
  
  Moved communication classes from org.openuat.authentication and
  org.openuat.sensors to org.openuat.util:
  * SafetyBeltTimer
  * MessageListener
  * UDPMulticastSocket
  * BluetoothRFCOMMChannel
  
  Restructured some base communication classes to remove their dependency on 
  TCP and allow different underlying stream-oriented connections (such as
  Bluetooth RFCOMM):
  * util.RemoteConnection: encapsulates stream connections
  * util.RemoteTCPConnection: an implementation for TCP (with underlying 
    Socket encapsulation)
  * util.HostServerBase: only connection-type independent code
  * util.TCPPortServer: the previously called HostServerSocket implementation
  All classes that previously dealt directly with Socket/InetAddress objects
  have now been changed to use the RemoteConnection interface instead, where
  applicable.
    
  New applications:
  * (J2ME) apps.j2me.HelloProporty
  * (J2ME) apps.j2me.
  
  Changed applications:
  * IPSecME client and server applications: now use Swing and are
    generally nicer

  The build script now integrates:
  * Cobertura for generating coverage reports.
  * Sun WTK with Ant Antenna plugins to create J2ME MIDlets.

--- Rene Mayrhofer <rene@mayrhofer.eu.org>


Version 0.9, packaged 2007-01-18, released 2007-03-29

  This is a major new features release, adding infrastructure for dealing with
  time series data on resource limited devices and a new context 
  authentication protocol based on accelerometers. This release also uses a 
  new package hierarchy: org.openuat.

  New interfaces:
  * sensors.SamplesSink
  * sensors.SegmentsSink

  New basic protocols:
  * authentication.CandidateKeyProtocol
  * authentication.CKPOverUDP

  New context authentication protocols:
  * authentication.accelerometers.MotionAuthenticationProtocol1
  * authentication.accelerometers.MotionAuthenticationProtocol2

  Sensor data classes:
  * sensors.AsciiLineReaderBase with two example subclasses
  * sensors.TimeSeries
  * sensors.TimeSeriesAggregator
  * features.Coherence
  * features.FFT
  * features.Quantizer
  * features.QuantizedFFTCoefficients

  New utility classes:
  * authentication.UDPMulticastSocket
  * sensors.BluetoothRFCOMMChannel
  * features.Complex
  * features.TimeSeriesUtil

  New applications:
  * apps.ShakingSinglePCDemonstrator

  Location: http://www.openuat.org/downloads/releases/0.9/openuat-0.9-src.zip
            http://downloads.sf.net/openuat/openuat-0.9-src.zip?download

--- Rene Mayrhofer <rene@mayrhofer.eu.org>


Version 0.8, released 2006-12-04

  This is the first public release and includes basic infrastructure classes,
  interfaces for event-based authentication protocols, and a first 
  implementation for spatial authentication based on ultrasound pulses. The
  code currently uses the Java package hierarchie under 
  org.eu.mayrhofer.authentication.

  Interfaces:
  * authentication.AuthenticationProgressHandler
  * authentication.MessageListener
  * channel.SecureChannel
  * channel.IPSecConnection

  Low-level crpytographic primitives:
  * util.Hash
  * included, select Bouncycastle classes for J2ME support

  Basic protocols:
  * authentication.SimpleKeyAgreement
  * authentication.InterlockProtocol
  * authentication.DHOverTCPWithVerification
  * channel.IPSecConnection_Factory

  Context authentication protocols:
  * authentication.relate.RelateAuthenticationProtocol

  Utility classes:
  * authentication.SafetyBeltTimer
  * authentication.AuthenticationEventSender
  * authentication.HostServerSocket
  * channel.Helper
  * channel.Command
  * channel.X509CertificateGenerator
  * apps.BinaryBlockStreamer

  Applications:
  * apps.IPSecConnectorAdmin
  * apps.IPSecConnectorClient

  Location: http://www.openuat.org/downloads/releases/0.8/openuat-0.8-src.zip
            http://downloads.sf.net/openuat/openuat-0.8-src.zip?download

--- Rene Mayrhofer <rene@mayrhofer.eu.org>
