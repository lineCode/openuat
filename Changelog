Version 0.12, released 2011-05-

  This is the first release to bring support for Android. Not all items 
  supported on J2ME/MIDP are currently included, but the following parts have
  already been ported to Android:
  
  * Bluetooth communication
  * Accelerometer data access
  * Example application using shaking motions

--- Rene Mayrhofer <rene@mayrhofer.eu.org>


Version 0.11, released 2009-04-27

  This is again a major new feature release, this time adding support for
  audio, video, manual text, and synchronized button press channels. A demo
  MIDlet combines most of these methods to study their user interface on 
  mobile phones.
  The major new component is org.openuat.authentication.HostProtocolHandler
  which now implements UACAP, the Unified Auxiliary Channel Authentication
  Protocol. UACAP is based on the MANA IV family of protocols and supports all
  currently known interaction (input, transfer, and verify) types and auxiliary
  channel properties (authenticity and confidentiality, among others).

  Bluetooth support on J2SE is now based around BlueCove instead of the 
  earlier avetanaBT library, which brings support for Windows, Linux, and
  MacOS/X.
  Additionally, a new logging framework wrapper now distinguishes between e.g.
  log4j on J2SE and bandy on J2ME.

  New interfaces:
  * org.openuat.authentication.OOBChannel, which in turn requires
    org.openuat.authentication.OOBMessageHandler

  New sensor data classes:
  * org.openuat.sensors.j2me.NokiaAccelerometerReader with corresponding Nokia
    sensor adapter written in python under pythonsrc/nokiaaccelserver.py

  New input/transfer/verify out-of-band channels:
  * org.openuat.channel.oob.AudioChannel and 
    org.openuat.channel.oob.J2MEAudioChannel
  * org.openuat.channel.oob.VisualChannel and
    org.openuat.channel.oob.J2MEVisualChannel
  * org.openuat.channel.oob.ButtonChannel with various specific implementations

  New utility classes:
  * org.openuat.util.LoggingHelper

  New classes for authentication:
  * org.openuat.authentication.HostProtocolHandler now implements UACAP

  New applications:
  * org.openuat.apps.BedaApp and org.openuat.apps.j2me.BedaMIDlet
  * org.openuat.apps.OpenUATtoolkit and org.openuat.apps.j2me.OpenUATmidlet

  Preliminary code aiming at group key agreement and communication over 
  blackboard-style HTTP server code is included, but not supported in this
  release.

  Contributors:
  * Audio and video channels were implemented by Iulia Ion
  * Synchronized button press channel was implemented by Lukas Huser
  Iulia Ion joined the core development team.

--- Rene Mayrhofer <rene@mayrhofer.eu.org>


Version 0.10, released 2007-12-04

  This is a major new feature release, adding support for new accelerometer
  sensors available on some recent laptop mainboards and Bluetooth RFCOMM
  communication. It is also the first release to include J2ME applets with
  automatic building from the standard build.xml. Stream-oriented connections
  are now represented by the new RemoteConnection interface so that classes 
  like HostProtocolHandler and the DHWithVerification protocol can 
  transparently use different connection types, e.g. TCP or Bluetooth RFCOMM.
  
  This release also adds a key manager for keeping track of the keys that a
  host shares with remote hosts.
  
  New interfaces:
  * util.RemoteConnection with implementations util.RemoteTCPConnection and
    util.BluetoothRFCOMMChannel
  
  Changed interfaces:
  * authentication.AuthenticationProgressHandler now has a new 
    AuthenticationStarted method
  
  New sensor data classes:
  * sensors.MainboardAccelerometerReaderFactory with implementations for 
    Linux and MacOS/X
  * sensors.j2me.SymbianTCPAccelerometerReader with native Symbian counterpart
    under thirdparty/NokiaAccelerometerSensorDaemon/
  
  New classes for authentication:
  * authentication.KeyManager
  * authentication.accelerometer.MarinPerianuComparison, still empty
  * authentication.accelerometer.MartiniSynchProtocol, still empty
  
  New utility classes for communication:
  * util.BluetoothRFCOMMServer
  * util.BluetoothPeerManager
  * util.BluetoothSupport with support for the avetanaBT stack
  
  New utility classes for user interaction:
  * apps.util.TrayIconHelper
  
  Moved communication classes from org.openuat.authentication and
  org.openuat.sensors to org.openuat.util:
  * SafetyBeltTimer
  * MessageListener
  * UDPMulticastSocket
  * BluetoothRFCOMMChannel
  
  Restructured some base communication classes to remove their dependency on 
  TCP and allow different underlying stream-oriented connections (such as
  Bluetooth RFCOMM):
  * util.RemoteConnection: encapsulates stream connections
  * util.RemoteTCPConnection: an implementation for TCP (with underlying 
    Socket encapsulation)
  * util.HostServerBase: only connection-type independent code
  * util.TCPPortServer: the previously called HostServerSocket implementation
  All classes that previously dealt directly with Socket/InetAddress objects
  have now been changed to use the RemoteConnection interface instead, where
  applicable.

  Renamed classes:
  * authentication.accelerometer.MotionAuthenticationProtocol1 
    -> ShakeWellBeforeUseProtocol1
  * authentication.accelerometer.MotionAuthenticationProtocol2 
    -> ShakeWellBeforeUseProtocol2
  * authentication.accelerometer.MotionAuthenticationParameters 
    -> ShakeWellBeforeUseParameters
    
  New applications:
  * (J2ME) apps.j2me.HelloProporty
  * (J2ME) apps.j2me.BluetoothDemo
  * (J2ME) apps.j2me.ShakeMIDlet implements shake-well-before-use between 
    mobile phones using split phases with opportunistic key agreement
  
  Changed applications:
  * IPSecME client and server applications: now use Swing and are generally 
    nicer

  The build script now integrates:
  * Findbugs for generating what-may-be-wrong report, with ant target 
    "findbugs".
  * Checkstyle for verifying source code style, with ant target "check".
  * Cobertura for generating coverage reports, with ant target 
    "coverage-report".
  * Sun WTK with J2ME Polish to create J2ME MIDlets, integrated in normal ant
    target "jar".

--- Rene Mayrhofer <rene@mayrhofer.eu.org>


Version 0.9, packaged 2007-01-18, released 2007-03-29

  This is a major new features release, adding infrastructure for dealing with
  time series data on resource limited devices and a new context 
  authentication protocol based on accelerometers. This release also uses a 
  new package hierarchy: org.openuat.

  New interfaces:
  * sensors.SamplesSink
  * sensors.SegmentsSink

  New basic protocols:
  * authentication.CandidateKeyProtocol
  * authentication.CKPOverUDP

  New context authentication protocols:
  * authentication.accelerometers.MotionAuthenticationProtocol1
  * authentication.accelerometers.MotionAuthenticationProtocol2

  Sensor data classes:
  * sensors.AsciiLineReaderBase with two example subclasses
  * sensors.TimeSeries
  * sensors.TimeSeriesAggregator
  * features.Coherence
  * features.FFT
  * features.Quantizer
  * features.QuantizedFFTCoefficients

  New utility classes:
  * authentication.UDPMulticastSocket
  * sensors.BluetoothRFCOMMChannel
  * features.Complex
  * features.TimeSeriesUtil

  New applications:
  * apps.ShakingSinglePCDemonstrator

  Location: http://www.openuat.org/downloads/releases/0.9/openuat-0.9-src.zip
            http://downloads.sf.net/openuat/openuat-0.9-src.zip?download

--- Rene Mayrhofer <rene@mayrhofer.eu.org>


Version 0.8, released 2006-12-04

  This is the first public release and includes basic infrastructure classes,
  interfaces for event-based authentication protocols, and a first 
  implementation for spatial authentication based on ultrasound pulses. The
  code currently uses the Java package hierarchie under 
  org.eu.mayrhofer.authentication.

  Interfaces:
  * authentication.AuthenticationProgressHandler
  * authentication.MessageListener
  * channel.SecureChannel
  * channel.IPSecConnection

  Low-level crpytographic primitives:
  * util.Hash
  * included, select Bouncycastle classes for J2ME support

  Basic protocols:
  * authentication.SimpleKeyAgreement
  * authentication.InterlockProtocol
  * authentication.DHOverTCPWithVerification
  * channel.IPSecConnection_Factory

  Context authentication protocols:
  * authentication.relate.RelateAuthenticationProtocol

  Utility classes:
  * authentication.SafetyBeltTimer
  * authentication.AuthenticationEventSender
  * authentication.HostServerSocket
  * channel.Helper
  * channel.Command
  * channel.X509CertificateGenerator
  * apps.BinaryBlockStreamer

  Applications:
  * apps.IPSecConnectorAdmin
  * apps.IPSecConnectorClient

  Location: http://www.openuat.org/downloads/releases/0.8/openuat-0.8-src.zip
            http://downloads.sf.net/openuat/openuat-0.8-src.zip?download

--- Rene Mayrhofer <rene@mayrhofer.eu.org>
